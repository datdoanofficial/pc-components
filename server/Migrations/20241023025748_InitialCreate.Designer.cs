// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using server.Data;

#nullable disable

namespace server.Migrations
{
    [DbContext(typeof(WebDBContext))]
    [Migration("20241023025748_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("server.Models.Brand", b =>
                {
                    b.Property<int>("BrandID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BrandID"));

                    b.Property<string>("BrandLogo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BrandID");

                    b.ToTable("Brand");

                    b.HasData(
                        new
                        {
                            BrandID = 1,
                            BrandLogo = "",
                            BrandName = "AORUS",
                            Description = "A gaming brand from Gigabyte"
                        },
                        new
                        {
                            BrandID = 2,
                            BrandLogo = "",
                            BrandName = "Asus ROG",
                            Description = "The Republic of Gamers line from Asus"
                        },
                        new
                        {
                            BrandID = 3,
                            BrandLogo = "",
                            BrandName = "Razer",
                            Description = "A gaming brand known for its peripherals and laptops"
                        },
                        new
                        {
                            BrandID = 4,
                            BrandLogo = "",
                            BrandName = "Intel",
                            Description = "A leading manufacturer of computer processors and other technologies"
                        });
                });

            modelBuilder.Entity("server.Models.Categories", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryID"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryID = 1,
                            CategoryName = "Desktop Computer",
                            Description = "Various types of desktop computers"
                        },
                        new
                        {
                            CategoryID = 2,
                            CategoryName = "PC Components",
                            Description = "Individual parts for building a computer"
                        },
                        new
                        {
                            CategoryID = 3,
                            CategoryName = "Gaming Peripherals",
                            Description = "Devices used for gaming, like keyboards and mice"
                        },
                        new
                        {
                            CategoryID = 4,
                            CategoryName = "Ergonomic & Gaming Chairs",
                            Description = "Chairs designed for comfort and gaming"
                        },
                        new
                        {
                            CategoryID = 5,
                            CategoryName = "PlayStation & Xbox Consoles",
                            Description = "Gaming consoles from Sony and Microsoft"
                        },
                        new
                        {
                            CategoryID = 6,
                            CategoryName = "Laptops & Notebook",
                            Description = "Portable computers"
                        },
                        new
                        {
                            CategoryID = 7,
                            CategoryName = "Monitors",
                            Description = "Display devices for computers"
                        });
                });

            modelBuilder.Entity("server.Models.CategoriesList", b =>
                {
                    b.Property<int>("CateListID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CateListID"));

                    b.Property<int?>("CategoriesCategoryID")
                        .HasColumnType("int");

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CateListID");

                    b.HasIndex("CategoriesCategoryID");

                    b.HasIndex("CategoryID");

                    b.ToTable("CategoriesList");

                    b.HasData(
                        new
                        {
                            CateListID = 1,
                            CategoryID = 2,
                            Description = "Central processing units for computers",
                            Name = "CPUs / Processors"
                        },
                        new
                        {
                            CateListID = 2,
                            CategoryID = 2,
                            Description = "Main circuit boards for computers",
                            Name = "Motherboards"
                        },
                        new
                        {
                            CateListID = 3,
                            CategoryID = 2,
                            Description = "Graphics processing units for computers",
                            Name = "GPUs / Graphics Cards"
                        },
                        new
                        {
                            CateListID = 4,
                            CategoryID = 2,
                            Description = "Random access memory for computers",
                            Name = "Memory / RAM"
                        },
                        new
                        {
                            CateListID = 5,
                            CategoryID = 2,
                            Description = "Storage devices for computers",
                            Name = "Hard Drives & SSDs"
                        },
                        new
                        {
                            CateListID = 6,
                            CategoryID = 2,
                            Description = "Enclosures for computer components",
                            Name = "Cases"
                        },
                        new
                        {
                            CateListID = 7,
                            CategoryID = 2,
                            Description = "Power sources for computers",
                            Name = "Power Supplies"
                        },
                        new
                        {
                            CateListID = 8,
                            CategoryID = 2,
                            Description = "Cooling systems for computers",
                            Name = "Fans & Cooling"
                        },
                        new
                        {
                            CateListID = 9,
                            CategoryID = 2,
                            Description = "Customized liquid cooling systems for computers",
                            Name = "Custom Liquid Cooling"
                        },
                        new
                        {
                            CateListID = 10,
                            CategoryID = 1,
                            Description = "High-performance computers designed for gaming",
                            Name = "Gaming PC"
                        },
                        new
                        {
                            CateListID = 11,
                            CategoryID = 1,
                            Description = "Compact desktop computers with customizable components",
                            Name = "BRIX (Mini-PC Barebone)"
                        },
                        new
                        {
                            CateListID = 12,
                            CategoryID = 6,
                            Description = "Laptops from Apple",
                            Name = "Macbook"
                        },
                        new
                        {
                            CateListID = 13,
                            CategoryID = 6,
                            Description = "Laptops running Windows operating system",
                            Name = "Laptop Windows"
                        },
                        new
                        {
                            CateListID = 14,
                            CategoryID = 3,
                            Description = "Input devices for typing",
                            Name = "Keyboards"
                        },
                        new
                        {
                            CateListID = 15,
                            CategoryID = 3,
                            Description = "Input devices for pointing and clicking",
                            Name = "Mouse & MousePads"
                        },
                        new
                        {
                            CateListID = 16,
                            CategoryID = 3,
                            Description = "Audio devices for listening and talking",
                            Name = "Headsets"
                        },
                        new
                        {
                            CateListID = 17,
                            CategoryID = 3,
                            Description = "Audio devices for playing sound",
                            Name = "Speakers"
                        },
                        new
                        {
                            CateListID = 18,
                            CategoryID = 3,
                            Description = "Input devices for recording audio and video",
                            Name = "Microphone & Webcam"
                        },
                        new
                        {
                            CateListID = 19,
                            CategoryID = 3,
                            Description = "Devices for connecting other devices to a computer",
                            Name = "Hubs / Accessories"
                        },
                        new
                        {
                            CateListID = 20,
                            CategoryID = 4,
                            Description = "Chairs designed for comfort and posture",
                            Name = "Ergonomic Chairs"
                        },
                        new
                        {
                            CateListID = 21,
                            CategoryID = 4,
                            Description = "Chairs designed for gaming and comfort",
                            Name = "Gaming Chairs"
                        },
                        new
                        {
                            CateListID = 22,
                            CategoryID = 5,
                            Description = "Gaming consoles from Sony",
                            Name = "PlayStation"
                        },
                        new
                        {
                            CateListID = 23,
                            CategoryID = 5,
                            Description = "Gaming consoles from Microsoft",
                            Name = "Xbox"
                        },
                        new
                        {
                            CateListID = 24,
                            CategoryID = 5,
                            Description = "Portable gaming consoles",
                            Name = "Handhelds"
                        },
                        new
                        {
                            CateListID = 25,
                            CategoryID = 5,
                            Description = "Accessories for gaming consoles",
                            Name = "Console Accessories"
                        },
                        new
                        {
                            CateListID = 26,
                            CategoryID = 7,
                            Description = "Monitors designed for gaming",
                            Name = "Gaming Monitors"
                        },
                        new
                        {
                            CateListID = 27,
                            CategoryID = 7,
                            Description = "Monitors designed for graphic design",
                            Name = "Graphic Design Monitors"
                        },
                        new
                        {
                            CateListID = 28,
                            CategoryID = 7,
                            Description = "Monitors with a curved screen",
                            Name = "Curved Monitors"
                        },
                        new
                        {
                            CateListID = 29,
                            CategoryID = 7,
                            Description = "Monitors with a resolution of 1920x1080 pixels",
                            Name = "Full HD Monitors"
                        },
                        new
                        {
                            CateListID = 30,
                            CategoryID = 7,
                            Description = "Monitors with a resolution of 2560x1440 pixels",
                            Name = "2K Monitors"
                        },
                        new
                        {
                            CateListID = 31,
                            CategoryID = 7,
                            Description = "Monitors with a resolution of 3840x2160 pixels",
                            Name = "4K Monitors"
                        },
                        new
                        {
                            CateListID = 32,
                            CategoryID = 7,
                            Description = "Monitors with a resolution of 5120x2880 pixels",
                            Name = "6K Monitors"
                        },
                        new
                        {
                            CateListID = 33,
                            CategoryID = 7,
                            Description = "Monitors with a resolution of 7680x4320 pixels",
                            Name = "8K Monitors"
                        });
                });

            modelBuilder.Entity("server.Models.ImageGallery", b =>
                {
                    b.Property<int>("ImageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImageID"));

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.HasKey("ImageID");

                    b.HasIndex("ProductID");

                    b.ToTable("ImageGalleries");

                    b.HasData(
                        new
                        {
                            ImageID = 1,
                            ImagePath = "images/products/product1/image1.jpg",
                            ProductID = 1
                        },
                        new
                        {
                            ImageID = 2,
                            ImagePath = "images/products/product1/image2.jpg",
                            ProductID = 1
                        },
                        new
                        {
                            ImageID = 3,
                            ImagePath = "images/products/product2/image1.jpg",
                            ProductID = 1
                        },
                        new
                        {
                            ImageID = 4,
                            ImagePath = "images/products/product2/image2.jpg",
                            ProductID = 1
                        });
                });

            modelBuilder.Entity("server.Models.Product", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductID"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<bool>("BestSeller")
                        .HasColumnType("bit");

                    b.Property<int?>("BrandID")
                        .HasColumnType("int");

                    b.Property<int?>("CategoryID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Guarantee")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReturnPolicy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UnitsInStock")
                        .HasColumnType("int");

                    b.HasKey("ProductID");

                    b.HasIndex("BrandID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductID = 1,
                            Active = true,
                            BestSeller = true,
                            BrandID = 4,
                            CategoryID = 2,
                            CreatedDate = new DateTime(2024, 10, 23, 9, 57, 48, 738, DateTimeKind.Local).AddTicks(6970),
                            Description = "16-core, 24-thread processor with up to 6.0 GHz boost clock",
                            Discount = 0m,
                            Guarantee = "36 Months",
                            ModifiedDate = new DateTime(2024, 10, 23, 9, 57, 48, 738, DateTimeKind.Local).AddTicks(6970),
                            Price = 599.99m,
                            ProductCode = "INT-I9-14900K",
                            ProductName = "Intel Core i9-14900K",
                            ReturnPolicy = "30 days after the delivered",
                            TitleDescription = "Intel Core i9-14900K: Flagship desktop processor",
                            UnitsInStock = 100
                        });
                });

            modelBuilder.Entity("server.Models.CategoriesList", b =>
                {
                    b.HasOne("server.Models.Categories", null)
                        .WithMany("CategoriesList")
                        .HasForeignKey("CategoriesCategoryID");

                    b.HasOne("server.Models.Categories", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("server.Models.ImageGallery", b =>
                {
                    b.HasOne("server.Models.Product", "Product")
                        .WithMany("ImageGalleries")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("server.Models.Product", b =>
                {
                    b.HasOne("server.Models.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandID");

                    b.HasOne("server.Models.Categories", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryID");

                    b.Navigation("Brand");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("server.Models.Categories", b =>
                {
                    b.Navigation("CategoriesList");
                });

            modelBuilder.Entity("server.Models.Product", b =>
                {
                    b.Navigation("ImageGalleries");
                });
#pragma warning restore 612, 618
        }
    }
}
